
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Profile Photos
    // Org-scoped profile photos
    match /organizations/{orgId}/profile_photos/{userId}/{fileName} {
      allow read: if request.auth != null && request.auth.token.organizationId == orgId; // Members of the org can read
      allow write: if request.auth != null && request.auth.token.organizationId == orgId &&
                       (request.auth.uid == userId || request.auth.token.role == 'admin'); // User can write their own, admin can write any in their org
    }

    // Profile photos (user-specific, less likely for this app structure but can be a fallback)
    // Ensure this doesn't conflict if /organizations/{orgId}/profile_photos is the primary path
    match /profile_photos/{userId}/{fileName} {
      allow read: if request.auth != null; 
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Evaluation Evidence
    // Path: organizations/{organizationId}/evaluations_evidence/{evaluationId}/{fileName}
    // evaluationId can be a composite ID like employeeId-taskId-dateString-timestamp
    match /organizations/{orgId}/evaluations_evidence/{evaluationId}/{allSegments=**} { // Using {allSegments=**} to catch potential subpaths within evaluationId if it contains '/'
      allow read: if request.auth != null && request.auth.token.organizationId == orgId;
      allow write: if request.auth != null && request.auth.token.organizationId == orgId && request.auth.token.role == 'admin';
    }

    // Challenge Submission Files
    // Path: organizations/{organizationId}/challenges/{challengeId}/submissions/{employeeId}/{fileName}
    match /organizations/{orgId}/challenges/{challengeId}/submissions/{employeeId}/{fileName} {
      allow read: if request.auth != null && request.auth.token.organizationId == orgId; // Admins or involved users
      allow write: if request.auth != null && request.auth.token.organizationId == orgId && request.auth.uid == employeeId; // Only the employee can submit
    }

    // Award Delivery Photos
    // Path: organizations/{organizationId}/award_deliveries/{awardHistoryId}/{fileName}
    match /organizations/{orgId}/award_deliveries/{awardHistoryId}/{fileName} {
      allow read: if request.auth != null && request.auth.token.organizationId == orgId;
      allow write: if request.auth != null && request.auth.token.organizationId == orgId && request.auth.token.role == 'admin';
    }

    // Default deny all other paths (good practice)
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
  }
}
