
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Organizations: Super Admins can manage, authenticated users of that org can read.
    match /organizations/{organizationId} {
      allow read: if request.auth != null && 
                     (request.auth.token.role == 'super_admin' || request.auth.token.organizationId == organizationId);
      allow write: if request.auth != null && request.auth.token.role == 'super_admin';

      // Tasks within an organization
      match /tasks/{taskId} {
        allow read: if request.auth.token.organizationId == organizationId || request.auth.token.role == 'super_admin';
        allow write: if (request.auth.token.role == 'admin' && request.auth.token.organizationId == organizationId) ||
                        request.auth.token.role == 'super_admin';
      }

      // Departments within an organization
      match /departments/{departmentId} {
        allow read: if request.auth.token.organizationId == organizationId || 
                       request.auth.token.role == 'super_admin';
        allow write: if (request.auth.token.role == 'admin' && 
                         request.auth.token.organizationId == organizationId) ||
                        request.auth.token.role == 'super_admin';
      }

      // Roles (job titles) within an organization
      match /roles/{roleId} {
        allow read: if request.auth.token.organizationId == organizationId || 
                       request.auth.token.role == 'super_admin';
        allow write: if (request.auth.token.role == 'admin' && 
                         request.auth.token.organizationId == organizationId) ||
                        request.auth.token.role == 'super_admin';
      }
      
      // Evaluations within an organization
      match /evaluations/{evaluationId} {
        allow read: if (request.auth.token.organizationId == organizationId && 
                       (request.auth.token.role == 'admin' || (request.auth.token.role == 'collaborator' && resource.data.employeeId == request.auth.uid))) ||
                      request.auth.token.role == 'super_admin';
        allow write: if (request.auth.token.role == 'admin' && request.auth.token.organizationId == organizationId) ||
                        request.auth.token.role == 'super_admin';
      }

      // Challenges within an organization
      match /challenges/{challengeId} {
        allow read: if request.auth.token.organizationId == organizationId || request.auth.token.role == 'super_admin';
        allow write: if (request.auth.token.role == 'admin' && request.auth.token.organizationId == organizationId) ||
                        request.auth.token.role == 'super_admin';
      }

      // Challenge Participations within an organization
      match /challengeParticipations/{participationId} {
        // Admins/SuperAdmins can read all. Collaborators can read their own.
        allow read: if (request.auth.token.organizationId == organizationId && 
                       (request.auth.token.role == 'admin' || (request.auth.token.role == 'collaborator' && resource.data.employeeId == request.auth.uid))) ||
                      request.auth.token.role == 'super_admin';
        // Admins/SuperAdmins can write (evaluate). Collaborators can create/update their own submissions.
        allow write: if request.auth.token.organizationId == organizationId &&
                        (request.auth.token.role == 'admin' || 
                         (request.auth.token.role == 'collaborator' && request.resource.data.employeeId == request.auth.uid)) || // Allow collaborator to create/update their own
                       request.auth.token.role == 'super_admin';
      }
      // TODO: Add rules for other subcollections like 'awards', 'rankings', 'settings'
    }

    // Users: Super Admins can manage all. Admins can manage users in their org. Users can read their own.
    match /users/{userId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || 
                      request.auth.token.role == 'super_admin' ||
                      (request.auth.token.role == 'admin' && request.auth.token.organizationId == resource.data.organizationId));
      allow write: if request.auth != null &&
                      (request.auth.token.role == 'super_admin' ||
                       (request.auth.token.role == 'admin' && request.auth.token.organizationId == resource.data.organizationId) ||
                       (request.auth.uid == userId && (!request.resource || !("role" in request.resource.data) && !("organizationId" in request.resource.data))) // User can update own profile, but not role/orgId
                      );
    }
    
    // Plans: Authenticated users can read, only Super Admins can write.
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'super_admin';
    }
  }
}
