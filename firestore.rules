rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId ||
                     request.auth.token.role == 'super_admin' ||
                     (request.auth.token.role == 'admin' && request.auth.token.organizationId == resource.data.organizationId);
      // Admins can update user profiles within their org, Super Admin can update any.
      allow update: if (request.auth.token.role == 'admin' && request.auth.token.organizationId == resource.data.organizationId) ||
                       request.auth.token.role == 'super_admin';
      // User can create their own profile, Super Admin can create any.
      // Admin creation of users is handled by Cloud Function with Super Admin privileges.
      allow create: if request.auth.uid == userId || request.auth.token.role == 'super_admin';
    }

    // Organizations collection (documento da organização em si)
    match /organizations/{organizationId} {
      allow read: if request.auth.token.role == 'super_admin' ||
                     (request.auth.token.organizationId == organizationId && (request.auth.token.role == 'admin' || request.auth.token.role == 'collaborator'));
      allow write: if request.auth.token.role == 'super_admin';
    }

    // Subcollections within an organization
    // Este é um bloco genérico para admins e super_admins
    match /organizations/{organizationId}/{subcollection}/{docId} {
      // Super Admin tem acesso total
      allow read, write: if request.auth.token.role == 'super_admin';

      // Admin da organização tem acesso de leitura e escrita à maioria das subcoleções
      allow read, write: if request.auth.token.role == 'admin' && request.auth.token.organizationId == organizationId;
    }

    // Permissões específicas para Colaboradores (sobrepõem a regra genérica acima se mais restritivas, mas aqui são para leitura)
    match /organizations/{organizationId} {
      // Colaboradores podem ler tarefas da sua organização
      match /tasks/{taskId} {
        allow read: if request.auth.token.role == 'collaborator' && request.auth.token.organizationId == organizationId;
      }
      // Colaboradores podem ler suas próprias avaliações
      match /evaluations/{evaluationId} {
        allow read: if request.auth.token.role == 'collaborator' &&
                       request.auth.token.organizationId == organizationId &&
                       resource.data.employeeId == request.auth.uid;
      }
      // Colaboradores podem ler desafios da sua organização
      match /challenges/{challengeId} {
        allow read: if request.auth.token.role == 'collaborator' && request.auth.token.organizationId == organizationId;
      }
      // Colaboradores podem ler suas participações em desafios
      // e criar/atualizar suas próprias participações.
      match /challengeParticipations/{participationId} {
        allow read: if request.auth.token.role == 'collaborator' &&
                       request.auth.token.organizationId == organizationId &&
                       resource.data.employeeId == request.auth.uid;
        allow create, update: if request.auth.token.role == 'collaborator' &&
                                 request.auth.token.organizationId == organizationId &&
                                 request.resource.data.employeeId == request.auth.uid;
      }
      // Colaboradores podem ler departamentos e funções da sua organização
      match /departments/{departmentId} {
        allow read: if request.auth.token.role == 'collaborator' && request.auth.token.organizationId == organizationId;
      }
      match /roles/{roleId} {
        allow read: if request.auth.token.role == 'collaborator' && request.auth.token.organizationId == organizationId;
      }
       // Colaboradores podem ler o ranking da sua organização (se habilitado)
       // e as configurações (para saber se podem ver)
      match /rankingManagement/config {
        allow read: if request.auth.token.role == 'collaborator' && request.auth.token.organizationId == organizationId;
      }
      // A coleção real do ranking (se for uma coleção) precisaria de uma regra aqui também.
      // Se o ranking for calculado no cliente, as regras acima para evaluations/challenges são as relevantes.
    }

    // Coleções globais (fora de /organizations/{orgId})
    match /plans/{planId} {
        allow read: if request.auth != null;
        allow write: if request.auth.token.role == 'super_admin';
    }
    match /awards/{awardId} {
        allow read: if request.auth != null; // Todos autenticados podem ver prêmios
        allow write: if request.auth.token.role == 'super_admin' || (request.auth.token.role == 'admin'); // Admin pode gerenciar prêmios
    }
    match /awardHistory/{historyId} {
        allow read: if request.auth != null; // Todos autenticados podem ver histórico
        allow write: if request.auth.token.role == 'super_admin' || (request.auth.token.role == 'admin'); // Admin pode gerenciar histórico
    }
  }
}