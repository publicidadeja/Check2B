
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || request.auth.token.role == 'admin' || request.auth.token.role == 'super_admin';
      allow create: if request.auth.uid == userId || request.auth.token.role == 'admin' || request.auth.token.role == 'super_admin'; // Typically handled by CF
      allow update: if request.auth.uid == userId || (request.auth.token.role == 'admin' && request.auth.token.organizationId == resource.data.organizationId) || request.auth.token.role == 'super_admin';
      allow delete: if request.auth.token.role == 'admin' || request.auth.token.role == 'super_admin'; // Only admins/super_admins can delete user docs
    }

    // Organizations collection
    match /organizations/{organizationId} {
      allow read: if request.auth.token.organizationId == organizationId || request.auth.token.role == 'super_admin';
      allow write: if request.auth.token.role == 'admin' && request.auth.token.organizationId == organizationId; // Org admin can write their own org
      allow read, write: if request.auth.token.role == 'super_admin'; // Super admin full access

      // Tasks subcollection
      match /tasks/{taskId} {
        allow read: if request.auth.token.organizationId == organizationId; // Collaborators and Admins can read tasks of their org
        allow write: if request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin'; // Only Admins can write tasks
        allow read, write: if request.auth.token.role == 'super_admin';
      }

      // Evaluations subcollection
      match /evaluations/{evaluationId} {
        // Admins can read/write all evaluations in their org
        allow read, write: if request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin';
        // Collaborators can read their own evaluations specifically
        allow get: if request.auth.token.organizationId == organizationId && resource.data.employeeId == request.auth.uid;
        // Collaborators can list evaluations of their org (for client-side filtering on dashboard)
        // WARNING: This allows collaborators to list all evaluation data for their org. Refine if sensitive.
        allow list: if request.auth.token.organizationId == organizationId && request.auth.token.role == 'collaborator';
        allow read, write: if request.auth.token.role == 'super_admin';
      }

      // Challenges subcollection
      match /challenges/{challengeId} {
        allow read: if request.auth.token.organizationId == organizationId; // Collaborators and Admins can read challenges
        allow write: if request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin'; // Only Admins can write challenges
        allow read, write: if request.auth.token.role == 'super_admin';
      }

      // Challenge Participations subcollection
      match /challengeParticipations/{participationId} {
        allow read: if request.auth.token.organizationId == organizationId && (
                        (request.auth.token.role == 'collaborator' && resource.data.employeeId == request.auth.uid) ||
                        request.auth.token.role == 'admin'
                      );
        allow create: if request.auth.token.organizationId == organizationId &&
                         request.auth.token.role == 'collaborator' &&
                         request.resource.data.employeeId == request.auth.uid &&
                         request.resource.data.organizationId == organizationId;
        allow update: if request.auth.token.organizationId == organizationId && (
                        (request.auth.token.role == 'collaborator' && resource.data.employeeId == request.auth.uid && request.resource.data.employeeId == request.auth.uid) || // Collaborator can update their own
                        (request.auth.token.role == 'admin') // Admin can update (e.g., evaluate)
                      );
        allow delete: if request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin';
        allow read, write: if request.auth.token.role == 'super_admin';
      }

      // Challenge Management (settings) subcollection
      match /challengeManagement/{settingsDocId} {
          allow read, write: if (request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin') || request.auth.token.role == 'super_admin';
      }

      // App Settings (general settings) subcollection
      match /appSettings/{settingsDocId} {
          allow read, write: if (request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin') || request.auth.token.role == 'super_admin';
      }
      
      // Departments subcollection
      match /departments/{departmentId} {
          allow read: if request.auth.token.organizationId == organizationId;
          allow write: if (request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin') || request.auth.token.role == 'super_admin';
      }

      // Roles subcollection
      match /roles/{roleId} {
          allow read: if request.auth.token.organizationId == organizationId;
          allow write: if (request.auth.token.organizationId == organizationId && request.auth.token.role == 'admin') || request.auth.token.role == 'super_admin';
      }
      
      // Default deny for any other subcollections under organizations
      match /{subcollection}/{document=**} {
        allow read, write: if false;
      }
    }

    // Plans collection (Global)
    match /plans/{planId} {
      allow read: if true; // Plans are public to read
      allow write: if request.auth.token.role == 'super_admin';
    }

    // Awards collection (Global)
    match /awards/{awardId} {
        allow read: if request.auth.uid != null;
        allow write: if request.auth.token.role == 'admin' || request.auth.token.role == 'super_admin';
    }

    // Award History collection (Global)
    match /awardHistory/{historyId} {
        allow read: if request.auth.uid != null;
        allow write: if request.auth.token.role == 'admin' || request.auth.token.role == 'super_admin';
    }

    // User specific settings (e.g. notification preferences)
    match /users/{userId}/settings/{settingsDocId} {
        allow read, write: if request.auth.uid == userId || request.auth.token.role == 'super_admin';
    }
  }
}
